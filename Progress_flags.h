#include <iostream>
#include <map>
#include <vector>

// { World name, vector of flag addresses }
// uses Save+addr anchor
static inline std::map<std::string, std::vector<uint16_t>> progress_flags =
{
    {
        "100AW",
        {
            0x1DB0,
            0x1DB1,
            0x1DB2,
            0x1DB3,
            0x1DB4,
            0x1DB5,
            0x1DB6,
            0x1DB7,
            0x1DB8,
            0x1DB9,
            0x1DBA
        }
    },
    {
        "AG",
        {
            0x1D70,
            0x1D71,
            0x1D72,
            0x1D73,
            0x1D74,
            0x1D75,
            0x1D76,
            0x1D77,
            0x1D78,
            0x1D79,
            0x1D7A
        }
    },
    {
        "AT",
        {
            0x1DF0,
            0x1DF1,
            0x1DF2,
            0x1DF3,
            0x1DF4,
            0x1DF5,
            0x1DF6,
            0x1DF7,
            0x1DF8,
            0x1DF9
        }
    },
    {
        "BC",
        {
            0x1D30,
            0x1D31,
            0x1D32,
            0x1D33,
            0x1D34,
            0x1D35,
            0x1D36,
            0x1D37,
            0x1D38,
            0x1D39,
            0x1D3A
        }
    },
    {
        "DC",
        {
            0x1E10,
            0x1E11,
            0x1E12,
            0x1E13,
            0x1E14,
            0x1E30,
            0x1E31,
            0x1E32,
            0x1E33,
            0x1E34,
            0x1E35
        }
    },
    {
        "HB",
        {
            0x1D10,
            0x1D11,
            0x1D12,
            0x1D13,
            0x1D14,
            0x1D15,
            0x1D16,
            0x1D17,
            0x1D18,
            0x1D19,
            0x1D1A,
            0x1D1B,
            0x1D1C,
            0x1D1D,
            0x1D1E,
            0x1D1F,
            0x1D20,
            0x1D21,
            0x1D22,
            0x1D23,
            0x1D24,
            0x1D25,
            0x1D26,
            0x1D27,
            0x1D28
        }
    },
    {
        "HT",
        {
            0x1E50,
            0x1E51,
            0x1E52,
            0x1E53,
            0x1E54,
            0x1E55,
            0x1E56,
            0x1E57
        }
    },
    {
        "LOD",
        {
            0x1D90,
            0x1D91,
            0x1D92,
            0x1D93,
            0x1D94,
            0x1D95,
            0x1D96,
            0x1D97,
            0x1D98,
            0x1D99,
            0x1D9A,
            0x1D9B
        }
    },
    {
        "OC",
        {
            0x1D50,
            0x1D51,
            0x1D52,
            0x1D53,
            0x1D54,
            0x1D55,
            0x1D56,
            0x1D57,
            0x1D58,
            0x1D59,
            0x1D50,
            0x1D5A,
            0x1D5B,
            0x1D5C,
            0x1D5D,
            0x1D5E,
            0x1D5F
        }
    },
    {
        "PL",
        {
            0x1DD0,
            0x1DD1,
            0x1DD2,
            0x1DD3,
            0x1DD4,
            0x1DD5,
            0x1DD6
        }
    },
    {
        "PR",
        {
            0x1E90,
            0x1E91,
            0x1E92,
            0x1E93,
            0x1E94,
            0x1E95,
            0x1E96,
            0x1E97,
            0x1E98,
            0x1E99,
            0x1E9A,
            0x1E9B,
            0x1E9C
        }
    },
    {
        "SP",
        {
            0x1EB0,
            0x1EB1,
            0x1EB2,
            0x1EB3,
            0x1EB4,
            0x1EB5,
            0x1EB6,
            0x1EB7
        }
    },
    {
        "TT",
        {
            0x1CD0,
            0x1CD2,
            0x1CD3,
            0x1CD4,
            0x1CD5,
            0x1CD6,
            0x1CD7,
            0x1CD8,
            0x1CD9,
            0x1CDA,
            0x1CDB,
            0x1CDC,
            0x1CDD,
            0x1CDE,
            0x1CDF,
            0x1CE0,
            0x1CE1,
            0x1CE2,
            0x1CE3,
            0x1CE4,
            0x1CE5,
            0x1CE6,
            0x1CE7,
            0x1CE8,
            0x1CE9,
            0x1CEA,
            0x1CEB,
            0x1CEC,
            0x1CED,
            0x1CEF
        }
    },
    {
        "TWTNW",
        {
            0x1ED0,
            0x1ED1,
            0x1ED2,
            0x1ED3,
            0x1ED4,
            0x1ED5,
            0x1ED6,
            0x1ED7,
            0x1ED8,
            0x1ED9,
            0x1EDA
        }
    },
};
// lib does not use startbyte and array length to determine what to read,
// since there are exceptions like TT where 0x1CD1 does not exist